{"version":3,"sources":["assets/app_bg.webp","assets/dark_icon.svg","assets/light_icon.svg","assets/loading.svg","assets/minus.svg","assets/plus.svg","helpers/constants.ts","helpers/utils.ts","store/actions.ts","store/createReducer.ts","components/ProsConsItem/index.tsx","components/NewProsCons/index.tsx","components/ProsAndCons/index.tsx","components/Loading/index.tsx","components/ThemeSwitcher/index.tsx","styles/themes.ts","App.tsx","serviceWorker.ts","store/reducer.ts","index.tsx"],"names":["module","exports","apiBaseUrl","apiDataUrl","apiGroup","apiUser","titles","pros","cons","dark","putData","a","userId","groupId","newData","dispatch","oldData","fetch","method","headers","body","JSON","stringify","console","log","message","type","updateData","data","actionType","index","value","dataArr","cloneDeep","splice","push","currentObj","useSelector","useSelectorGeneric","ProsAndConsItem","styled","div","props","theme","colorType","itemBGColor","itemColor","memo","elem","useDispatch","state","ids","isEqual","removeItem","useCallback","useMemo","src","minus_icon","alt","onClick","NewStyledProsCons","sectionsBorderColor","InputStyled","input","title","useState","inputValue","setInputValue","addItem","replace","length","onKeyDownAddInput","e","keyCode","placeholder","onChange","target","onKeyDown","plus_icon","ProsAndConsStyled","TitleAndList","TitleStyled","color","List","map","key","uuid","LoadingStyled","loading_icon","draggable","SwitchStyled","ThemeIcon","img","width","switchTheme","Cookies","set","checked","checkedIcon","light_icon","uncheckedIcon","dark_icon","onColor","offColor","onHandleColor","offHandleColor","activeBoxShadow","lightTheme","mainBackgroundColor","darkTheme","AppStyled","app_bg","MainStyled","isLoading","getProsAndCons","fetchProsAndCons","json","getIds","fetchGroupId","fetchUserId","useEffect","Object","keys","Boolean","window","location","hostname","match","initialState","handlers","defaultState","get","reducer","action","hasOwnProperty","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d2f576fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app_bg.2d0f4c99.webp\";","module.exports = __webpack_public_path__ + \"static/media/dark_icon.25e91ac6.svg\";","module.exports = __webpack_public_path__ + \"static/media/light_icon.fe4053b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.3bc195ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.8135ce9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.65ccc6cd.svg\";","import { ITitles } from './types';\n\n// url's\nconst apiBaseUrl = 'https://avetiq-test.firebaseapp.com';\nexport const apiDataUrl = `${apiBaseUrl}/proscons/group`;\nexport const apiGroup = `${apiBaseUrl}/group/suren_hakobyan`;\nexport const apiUser = `${apiBaseUrl}/user/suren_hakobyan`;\n\n// titles\nexport const titles: ITitles = {\n    pros: \"Pro's\",\n    cons: \"Con's\",\n};\n\n// theme\nexport const dark = 'dark';\nexport const light = 'light';\n\n// action types\nexport const add = 'add';\nexport const remove = 'remove';\n","import { add, apiDataUrl, remove } from './constants';\nimport { IPutData, IUpdateData } from './types';\nimport { cloneDeep } from 'lodash';\nimport { UPDATE_DATA } from '../store/actions';\n\nconst putData = async ({ userId, groupId, newData, dispatch, oldData }: IPutData) => {\n    try {\n        await fetch(`${apiDataUrl}/${groupId}/user/${userId}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify(newData),\n        });\n    } catch (err) {\n        // handle error\n        console.log(err.message);\n\n        dispatch({ type: UPDATE_DATA, newData: oldData });\n    }\n};\n\nexport const updateData = async ({ data, type, actionType, dispatch, groupId, index, userId, value }: IUpdateData) => {\n    const dataArr = cloneDeep(data[type]) || [];\n\n    if (actionType === remove && index) {\n        dataArr?.splice(index, 1);\n    }\n\n    if (actionType === add && value) {\n        dataArr?.push(value);\n    }\n\n    const currentObj = { [type]: dataArr };\n\n    const newData = {\n        ...data,\n        ...currentObj,\n    };\n\n\n    dispatch({ type: UPDATE_DATA, newData });\n    await putData({ userId, groupId, newData, dispatch, oldData: data });\n};\n","// ids\nexport const SET_IDS = 'SET_IDS';\n\n// data\nexport const SET_DATA = 'SET_DATA';\nexport const UPDATE_DATA = 'UPDATE_DATA';\n\n// loading\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\n\n// theme\nexport const SET_THEME = 'SET_THEME';\n","import { TypedUseSelectorHook, useSelector as useSelectorGeneric } from 'react-redux';\nimport { IReducers } from '../helpers/types';\n\ninterface IAction {\n    type: string;\n}\n\nexport function createReducer<State, Action extends IAction>(initialState: State, handlers: { [key: string]: (state: State, action: Action) => State}) {\n    return function reducer(state: State = initialState, action: Action) {\n        if (handlers.hasOwnProperty(action.type)) {\n            return handlers[action.type](state, action);\n        }\n\n        return state;\n    };\n}\n\nexport const useSelector: TypedUseSelectorHook<IReducers> = useSelectorGeneric;\n","import React, { memo, useCallback, useMemo } from 'react';\nimport { IProsConsItem, IStyledType } from '../../helpers/types';\nimport { remove } from '../../helpers/constants';\nimport { useDispatch } from 'react-redux';\nimport { updateData } from '../../helpers/utils';\nimport { useSelector } from '../../store/createReducer';\nimport isEqual from 'react-fast-compare';\nimport styled from 'styled-components';\nimport { minus_icon } from '../../styles/icons';\n\nconst ProsConsItem = ({ elem, type, index }: IProsConsItem) => {\n    const dispatch = useDispatch();\n\n    const { data, ids } = useSelector(state => ({\n        data: state.data,\n        ids: state.ids,\n    }), isEqual);\n\n    const removeItem = useCallback(async () => {\n        await updateData({ data, type, groupId: ids?.groupId, userId: ids?.userId, dispatch, index, actionType: remove });\n    }, [dispatch, type, index, data, ids]);\n\n    return useMemo(() => (\n        <ProsAndConsItem colorType={type}>\n            <div>{elem}</div>\n            <img src={minus_icon} alt={'minus'} onClick={removeItem}/>\n        </ProsAndConsItem>\n    ), [elem, removeItem, type]);\n};\n\nconst ProsAndConsItem = styled.div<IStyledType>`\n    display: flex;\n    justify-content: space-between;\n    width: 70%;\n    margin-top: 6px;\n    height: 22px;\n    background-color: ${(props) => props.theme[props.colorType].itemBGColor || props.theme.pros.itemBGColor};\n    border-radius: 6px;\n    padding: 6px;\n    \n    & div {\n        color: ${({ theme }) => theme.itemColor};\n    }\n    \n    & img {\n        width: 20px;\n        transform: scale(1);\n        cursor: pointer;\n        transition: all 0.2s;   \n         \n        :hover {\n            transform: scale(1.2);\n        }\n    }\n`;\n\nexport default memo(ProsConsItem);\n","import React, { memo, useCallback, useMemo, useState } from 'react';\nimport { add } from '../../helpers/constants';\nimport { INewProsConsProps, IStyledType } from '../../helpers/types';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { plus_icon } from '../../styles/icons';\nimport { updateData } from '../../helpers/utils';\nimport { useSelector } from '../../store/createReducer';\nimport isEqual from 'react-fast-compare';\n\nconst NewProsCons = ({ title, type }: INewProsConsProps) => {\n    const dispatch = useDispatch();\n    const { data, ids } = useSelector(state => ({\n        data: state.data,\n        ids: state.ids,\n    }), isEqual);\n\n    const [inputValue, setInputValue] = useState<string>('');\n\n    const addItem = useCallback(async () => {\n        if (!inputValue.replace(/\\s/g, '').length) {\n            return;\n        }\n\n        await updateData({ data, actionType: add, userId: ids?.userId, groupId: ids?.groupId, value: inputValue, dispatch, type });\n    }, [dispatch, inputValue, type, data, ids]);\n\n    const onKeyDownAddInput = useCallback((e) => {\n        if (e.keyCode === 13) {\n            addItem();\n        }\n    }, [addItem]);\n\n    return useMemo(() => (\n        <NewStyledProsCons>\n            <InputStyled\n                colorType={type}\n                type={'text'}\n                placeholder={`New ${title}`}\n                onChange={e => setInputValue(e.target.value)}\n                onKeyDown={onKeyDownAddInput}\n            />\n            <img src={plus_icon} alt={'plus'} onClick={addItem}/>\n        </NewStyledProsCons>\n    ), [title, addItem, onKeyDownAddInput, type]);\n};\n\nconst NewStyledProsCons = styled.div`\n    margin-bottom: 20px;\n    height: 80px;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    border-top: 1px solid ${({ theme }) => theme.sectionsBorderColor};\n    border-bottom: 1px solid ${({ theme }) => theme.sectionsBorderColor};\n    \n    \n    & img {\n        width: 24px;\n        transform: scale(1);\n        cursor: pointer;\n        transition: all 0.2s;   \n         \n        :hover {\n            transform: scale(1.2);\n        }\n    }\n`;\n\nconst InputStyled = styled.input<IStyledType>`\n    height: 30px;\n    border-radius: 6px;\n    border: none;\n    width: 170px;\n    padding-left: 10px;\n    font-size: 14px;\n    background-color: ${(props) => props.theme[props.colorType].itemBGColor || props.theme.pros.itemBGColor};\n    color: ${({ theme }) => theme.itemColor};\n    \n    ::placeholder {\n        color: ${({ theme }) => theme.itemColor}\n    }\n`;\n\nexport default memo(NewProsCons);\n","import React, { useMemo, memo } from 'react';\nimport { IProsAndConsProps, IStyledType } from '../../helpers/types';\nimport ProsConsItem from '../ProsConsItem';\nimport NewProsCons from '../NewProsCons';\nimport styled from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n\nconst ProsAndCons = ({ dataArr, title, type }: IProsAndConsProps) => useMemo(() => (\n    <ProsAndConsStyled>\n        <TitleAndList>\n            <TitleStyled colorType={type}>{title}</TitleStyled>\n            <List>\n                {dataArr?.map((elem, index) => <ProsConsItem elem={elem} index={index} key={uuid()} type={type}/>)}\n            </List>\n        </TitleAndList>\n        <NewProsCons title={title} type={type}/>\n    </ProsAndConsStyled>\n), [dataArr, title, type]);\n\nconst ProsAndConsStyled = styled.div`\n    width: 100%;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    \n    :first-child {\n        border-right: 1px solid ${({ theme }) => theme.sectionsBorderColor};\n    }\n`;\n\nconst TitleAndList = styled.div`\n    height: 100%;\n`;\n\nconst TitleStyled = styled.div<IStyledType>`\n    border-bottom: 1px solid ${({ theme }) => theme.sectionsBorderColor};\n    padding-bottom: 10px;\n    margin: 10px 0px;\n    font-size: 20px;\n    font-weight: bold;\n    color: ${(props) => props.theme[props.colorType].color || props.theme.pros.color};\n`;\n\nconst List = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-height: calc(100% - 120px);\n    overflow-y: scroll;\n`;\n\nexport default memo(ProsAndCons);\n","import React, { useMemo, memo } from 'react';\nimport styled from 'styled-components';\nimport { loading_icon } from '../../styles/icons';\n\nconst Loading = () => {\n    return useMemo(() => (\n        <LoadingStyled>\n            <img src={loading_icon} alt={'loading'} draggable={false}/>\n        </LoadingStyled>\n    ), []);\n};\n\nconst LoadingStyled = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    & img {\n        width: 150px\n    }\n`;\nexport default memo(Loading);\n","import React, { memo, useCallback, useMemo } from 'react';\nimport { SET_THEME } from '../../store/actions';\nimport { dark, light } from '../../helpers/constants';\nimport { IThemeSwitcherProps } from '../../helpers/types';\nimport { useDispatch } from 'react-redux';\nimport ReactSwitch from 'react-switch';\nimport Cookies from 'js-cookie';\nimport styled from 'styled-components';\nimport { light_icon, dark_icon } from '../../styles/icons';\n\nconst ThemeSwitcher = ({ theme }: IThemeSwitcherProps) => {\n    const dispatch = useDispatch();\n\n    const switchTheme = useCallback((value) => {\n        dispatch({ type: SET_THEME, theme: value ? dark : light });\n        Cookies.set('theme', value ? dark : light);\n    }, [dispatch]);\n\n    return useMemo(() => (\n        <SwitchStyled>\n            <ReactSwitch\n                onChange={switchTheme}\n                checked={theme === dark}\n                checkedIcon={(<ThemeIcon src={light_icon} alt={dark}/>)}\n                uncheckedIcon={(<ThemeIcon src={dark_icon} alt={light}/>)}\n                onColor={theme === dark ? '#23743A' : '#303C44'}\n                offColor={theme === dark ? '#23743A' : '#303C44'}\n                onHandleColor={theme === dark ? '#dddddd' : '#dddddd'}\n                offHandleColor={theme === dark ? '#dddddd' : '#dddddd'}\n                activeBoxShadow={'none'}\n            />\n        </SwitchStyled>\n    ), [switchTheme, theme]);\n};\n\nconst SwitchStyled = styled.div`\n    position: absolute;\n    top: 2px;\n    right: 2px\n`;\nconst ThemeIcon = styled.img({\n    width: 28\n});\n\nexport default memo(ThemeSwitcher);\n","export const lightTheme = {\n    mainBackgroundColor: 'rgba(255, 255, 255, 0.7)',\n    sectionsBorderColor: 'rgb(48, 60, 68)',\n    itemColor: '#ddd',\n    pros: {\n        color: '#32a852',\n        itemBGColor: '#32a852'\n    },\n    cons: {\n        color: '#ff001c',\n        itemBGColor: '#ff001c',\n    }\n};\n\nexport const darkTheme = {\n    mainBackgroundColor: 'rgba(0, 0, 0, 0.7)',\n    sectionsBorderColor: 'rgb(221, 221, 221)',\n    itemColor: '#151515',\n    pros: {\n        color: '#00b779',\n        itemBGColor: '#00b779',\n    },\n    cons: {\n        color: '#e90048',\n        itemBGColor: '#e90048',\n    }\n};\n","import React, { useMemo, memo, useEffect, useCallback } from 'react';\nimport ProsAndCons from './components/ProsAndCons';\nimport Loading from './components/Loading';\nimport ThemeSwitcher from './components/ThemeSwitcher';\nimport { apiDataUrl, apiGroup, apiUser, light, titles } from 'helpers/constants';\nimport { SET_DATA, SET_IDS, SET_IS_LOADING } from 'store/actions';\nimport { darkTheme, lightTheme } from './styles/themes';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'store/createReducer';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { v4 as uuid } from 'uuid';\nimport { app_bg } from './styles/icons';\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    const { data, isLoading, theme } = useSelector((state) => ({\n        data: state.data,\n        isLoading: state.isLoading,\n        theme: state.theme,\n    }));\n\n    const getProsAndCons = useCallback(async (groupId, userId) => {\n        const fetchProsAndCons = await fetch(`${apiDataUrl}/${groupId}/user/${userId}`);\n        const { pros, cons } = await fetchProsAndCons.json();\n\n        dispatch({ type: SET_IDS, ids: { groupId, userId } });\n        dispatch({ type: SET_DATA, data: { pros, cons } });\n    }, [dispatch]);\n\n    const getIds = useCallback(async () => {\n        try {\n            const fetchGroupId = await fetch(apiGroup);\n            const { groupId } = await fetchGroupId.json();\n            const fetchUserId = await fetch(apiUser);\n            const { userId } = await fetchUserId.json();\n\n            await getProsAndCons(groupId, userId);\n        } catch (err) {\n            // handle error\n            console.log(err.message);\n\n            dispatch({ type: SET_IS_LOADING, isLoading: false });\n        }\n    }, [dispatch, getProsAndCons]);\n\n    useEffect(() => {\n        getIds();\n    }, [getIds]);\n\n    return useMemo(() => (\n        <ThemeProvider theme={theme === light ? lightTheme : darkTheme}>\n            <AppStyled>\n                <MainStyled>\n                    {isLoading ? <Loading/> : (\n                        <>\n                            {Object.keys(data).map((elem) => <ProsAndCons key={uuid()} dataArr={data[elem]} title={titles[elem]} type={elem}/>)}\n                            <ThemeSwitcher theme={theme}/>\n                        </>\n                    )}\n                </MainStyled>\n            </AppStyled>\n        </ThemeProvider>\n    ), [theme, isLoading, data]);\n}\n\nconst AppStyled = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background: url(${app_bg});\n    background-repeat: no-repeat;\n    background-size: 100vw 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst MainStyled = styled.div`\n    width: calc(100vw / 1.5);\n    height: calc(100vh / 1.2);\n    background-color: ${({ theme }) => theme.mainBackgroundColor};\n    border-radius: 12px;\n    display: flex;\n    justify-content: space-evenly;\n    position: relative;\n    transition: all 0.2s\n`;\n\nexport default memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore } from 'redux';\nimport { createReducer } from './createReducer';\nimport { SET_IDS, SET_IS_LOADING, SET_THEME, SET_DATA, UPDATE_DATA } from './actions';\nimport { IActions, IReducers } from '../helpers/types';\nimport Cookies from 'js-cookie';\nimport { light } from '../helpers/constants';\n\nconst defaultState = {\n    ids: null,\n    data: {\n        pros: null,\n        cons: null,\n    },\n    isLoading: true,\n    theme: Cookies.get('theme') || light\n};\n\nconst reducer = createReducer<IReducers, IActions>(defaultState, {\n    [SET_IDS]: (state, action) => ({\n        ...state,\n        ids: action.ids\n    }),\n    [SET_DATA]: (state, action) => ({\n        ...state,\n        isLoading: false,\n        data: action.data\n    }),\n    [SET_IS_LOADING]: (state, action) => ({\n        ...state,\n        isLoading: action.isLoading\n    }),\n    [SET_THEME]: (state, action) => ({\n        ...state,\n        theme: action.theme\n    }),\n    [UPDATE_DATA]: (state, action) => ({\n        ...state,\n        data: action.newData,\n    })\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/reducer';\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}